// Generated by CoffeeScript 1.11.1
angular.module('application', ['ngRoute', 'restangular']).config(function($routeProvider, RestangularProvider) {
  $routeProvider.when("/", {
    templateUrl: "./assets/templates/landing.html",
    controller: "displayController"
  }).when("/new", {
    templateUrl: "./assets/templates/new.html"
  }).when("/editor/:basename", {
    templateUrl: "./assets/templates/editor.html",
    controller: "editorController"
  });
  RestangularProvider.setBaseUrl("https://api.github.com/");
}).factory('tokenFactory', function($window, $rootScope) {
  return {
    saveProfile: function(url, token) {
      $window.localStorage.setItem('token', token);
      $window.localStorage.setItem('url', url);
      return $rootScope.$broadcast('tokenEvent');
    },
    clearProfile: function() {
      $window.localStorage.setItem('token', false);
      $window.localStorage.setItem('url', false);
      return $rootScope.$broadcast('tokenEvent');
    }
  };
}).factory('utilsFactory', function() {
  return {
    getUsername: function(url) {
      return url.split('.')[0];
    },
    getPostTitle: function(gitTitle) {
      var temp;
      temp = gitTitle.split('-').slice(3).join(" ");
      return temp.split('.')[0];
    },
    generatePostTitle: function(title) {
      var date, dd, mm, title_part, today, yy;
      today = new Date();
      dd = today.getDate();
      mm = today.getMonth() + 1;
      yy = today.getFullYear();
      if (dd < 10) {
        dd = '0' + dd;
      }
      if (mm < 10) {
        mm = '0' + mm;
      }
      date = yy + '-' + mm + '-' + dd + '-';
      title_part = title.split(" ").join("-").concat(".md");
      return date.concat(title_part);
    },
    encode: function(title) {
      return btoa(title);
    },
    decode: function(blob) {
      return atob(blob);
    },
    getPostContentFromBlob: function(blob) {
      return blob.split("---").slice(2).join("---");
    },
    generateBlob: function(blob, postContent) {
      return "---".concat(blob.split("---").slice(1).join("---")).concat(postContent);
    }
  };
}).controller('tokenController', function($scope, tokenFactory) {
  $scope.tokenMsg = 0;
  return $scope.newToken = function() {
    if (!$scope.token || !$scope.url) {
      $scope.tokenMsg = "Please fill in complete details on form";
    }
    return tokenFactory.saveProfile($scope.url, $scope.token);
  };
}).controller('navController', function($scope, $rootScope, $window, tokenFactory) {
  $scope.authenticated = $window.localStorage.getItem('token');
  console.log("URL : " + $window.localStorage.getItem('url'));
  console.log("TOKEN : " + $window.localStorage.getItem('token'));
  $scope.logout = function() {
    return tokenFactory.clearProfile();
  };
  return $rootScope.$on("tokenEvent", function() {
    return $scope.authenticated = $window.localStorage.getItem('token');
  });
}).controller('displayController', function($scope, $window, $rootScope, Restangular) {
  $scope.authenticated = $window.localStorage.getItem('token');
  return $rootScope.$on("tokenEvent", function() {
    return $scope.authenticated = $window.localStorage.getItem('token');
  });
}).controller('dashboardController', function($scope, $window, Restangular, utilsFactory) {
  $scope.utils = utilsFactory;
  $scope.url = $window.localStorage.getItem('url');
  $scope.token = $window.localStorage.getItem('token');
  $scope.username = utilsFactory.getUsername($window.localStorage.getItem('url'));
  return Restangular.setDefaultHeaders({
    'Authorization': 'Basic ' + $scope.token
  }).one('/repos/' + $scope.username + '/' + $scope.url + '/contents/_posts').get().then(function(response) {
    return $scope.posts = response;
  });
}).controller('newController', function($scope, $window, Restangular, utilsFactory) {
  $scope.url = $window.localStorage.getItem('url');
  $scope.token = $window.localStorage.getItem('token');
  $scope.username = utilsFactory.getUsername($window.localStorage.getItem('url'));
  $scope.initialCommitPre = "---\npublished: false\ntitle: ";
  $scope.initialCommitPost = "\nlayout: post\n---\n\n";
  return $scope.createNew = function() {
    var instance;
    $scope.postFileName = utilsFactory.generatePostTitle($scope.postTitle);
    instance = Restangular.setDefaultHeaders({
      'Authorization': 'Basic ' + $scope.token
    }).one('/repos/' + $scope.username + '/' + $scope.url + '/contents/_posts/' + $scope.postFileName);
    instance.message = "CREATED : " + $scope.postTitle;
    instance.content = utilsFactory.encode($scope.initialCommitPre + $scope.postTitle + $scope.initialCommitPost);
    return instance.put().then(function(response) {
      return alert("Successfull created");
    }, function(response) {
      return alert("Error while creating file");
    });
  };
}).controller('editorController', function($scope, $window, $route, $routeParams, utilsFactory, Restangular) {
  var instance;
  $scope.utils = utilsFactory;
  $scope.url = $window.localStorage.getItem('url');
  $scope.token = $window.localStorage.getItem('token');
  $scope.username = utilsFactory.getUsername($window.localStorage.getItem('url'));
  $scope.fileName = utilsFactory.decode($routeParams.basename);
  instance = Restangular.setDefaultHeaders({
    'Authorization': 'Basic ' + $scope.token
  }).one('/repos/' + $scope.username + '/' + $scope.url + '/contents/_posts/' + $scope.fileName).get().then(function(response) {
    $scope.postResource = response;
    return $scope.editorContent = utilsFactory.getPostContentFromBlob(utilsFactory.decode(response.content));
  }, function(response) {
    return alert(response);
  });
  return $scope.updatePost = function() {
    var newContent;
    newContent = utilsFactory.generateBlob(utilsFactory.decode($scope.postResource.content), $scope.editorContent);
    $scope.postResource.message = "Update : " + utilsFactory.getPostTitle($scope.fileName);
    $scope.postResource.content = utilsFactory.encode(newContent);
    return $scope.postResource.put();
  };
});
